{
    "swagger": "2.0",
    "info": {
        "title": "LeapAS API",
        "description": "Move your app forward with the LeapAS API",
        "version": "3.0.0"
    },
    "host": "api.leap.as",
    "schemes": [
        "https"
    ],
    "basePath": "/3.0",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/apps": {
            "get": {
                "summary": "Get Application List Based on SessionToken",
                "description": "",
                "tags": [
                    "Application"
                ],
                "responses": {
                    "200": {
                        "description": "An array of applications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Create an Application",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "application",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Invalid Application"
                    }
                }
            }
        },
        "/apps/org/{orgId}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Find Applications by OrgID",
                "description": "",
                "operationId": "getApplicationByOrgId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "orgId",
                        "description": "ID of organization",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of applications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/all": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Find All Applications Matchs The Query",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of applications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/query": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Find All Applications Matchs The Query",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Query object",
                        "required": false,
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Query"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of applications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appId}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get Application by ID",
                "description": "",
                "operationId": "getApplicationById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "description": "ID of application that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                }
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Update Application by ID",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid application supplied"
                    }
                }
            }
        },
        "/apps/{appId}/ccodesetting": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Update Application CCodeSetting by ID",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "description": "ID of application that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string",
                                    "description": ""
                                },
                                "cloudCodeMapping": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appId}/deleteIAP": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Delete Application's IAP Setting By AppID",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "description": "ID of application that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appId}/getSingle": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Get The Simple Application Info By AppID",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "description": "ID of application that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": ""
                                },
                                "orgId": {
                                    "type": "string",
                                    "description": ""
                                },
                                "orgUserIds": {
                                    "type": "array",
                                    "description": ""
                                },
                                "description": {
                                    "type": "string",
                                    "description": ""
                                },
                                "metadata": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/console/hosting": {
            "get": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "Find All Jar files Of Application",
                "description": "list all jar files of running application in the cloud",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "An array of file name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": [
                                "helloworld.jar"
                            ]
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/console/config": {
            "get": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "View global.json config Of Application",
                "description": "view global.json config of running application in the cloud",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "gloabal.json config",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "applicationName": {
                                    "type": "string",
                                    "description": ""
                                },
                                "applicationId": {
                                    "type": "string",
                                    "description": ""
                                },
                                "lang": {
                                    "type": "string",
                                    "description": ""
                                },
                                "java-main": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "applicationName": "JustPlay",
                                "applicationId": "53a8fb2530042872f0bf39db",
                                "lang": "java",
                                "java-main": "me.streamis.Main"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/console/jobNames": {
            "get": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "List All Job Names Of Application",
                "description": "list all job names of running application in the cloud",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "An array of job name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": [
                                "testJob001",
                                "testJob003",
                                "testJob003"
                            ]
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/console/logs/{level}": {
            "get": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "Find Special Level Logs Of Application Matches The Query",
                "description": "find special level logs of the application in the cloud matches the query",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "level",
                        "description": "log level,contains info/error/all,case-insensitive",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "info",
                            "error",
                            "all"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "special level logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "description": "",
                                    "items": {
                                        "$ref": "#/definitions/ConsoleLog"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "updatedAt": "2014-10-11T01:54:13.677Z",
                                        "message": "Deployed Cloud Function :hello",
                                        "level": "INFO",
                                        "createdAt": "2014-10-11T01:54:13.677Z",
                                        "objectId": "54388dc53004c29959646a20"
                                    },
                                    {
                                        "updatedAt": "2014-10-11T01:44:48.354Z",
                                        "message": "Deployed Cloud Function :hello",
                                        "level": "INFO",
                                        "createdAt": "2014-10-11T01:44:48.354Z",
                                        "objectId": "54388b903004256d29137670"
                                    }
                                ]
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cloudcode/upload": {
            "post": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "Upload Your Application's Cloud Code",
                "description": "upload your application code which will be deployed in the cloud，This operation may take a long time",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "your application code file which you want to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return status message of code uploaded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Whether has been successful"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "docker image id for your Application code"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": true,
                                "message": "10.10.10.160:8010/545ad7583ee6/helloword:0.1.1"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cloudcode/versions": {
            "get": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "List All Code Versions Uploaded Of Application",
                "description": "list all code versions uploaded of application in the cloud",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "An array of version",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": [
                                "0.1.0",
                                "0.1.1",
                                "0.2.0"
                            ]
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cloudcode/deploy": {
            "post": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "Deploy An Special Version's Application",
                "description": "deploy an special version's application，This operation may take a long time",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "version which you want to deloy",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "version": {
                                    "type": "string",
                                    "description": "the version of you want to deploy application"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return the status of operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "description": "Whether has been successful"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cloudcode/unDeploy": {
            "post": {
                "tags": [
                    "Cloudcode"
                ],
                "summary": "UnDeploy Your All Running Applications",
                "description": "UnDeploy all applcations of running in the cloud，This operation may take a long time",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return the status of operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "description": "Whether has been successful"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/tasks": {
            "get": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Find All Tasks Waiting For executed Of Application",
                "description": "find all jobs waiting for executed of the application in the cloud",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return job tasks",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "description": "",
                                    "items": {
                                        "$ref": "#/definitions/JobTask"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "createdAt": "2014-12-01T03:07:26.388Z",
                                        "name": "myJob",
                                        "interval": 20000,
                                        "applicationId": "53d21c66e4b04663ccc7fbfd",
                                        "params": {
                                            "a": "b"
                                        },
                                        "objectId": "547bdb6e3004119e22ee7893",
                                        "executeTime": 1417414506140,
                                        "desc": "my test01",
                                        "updatedAt": "2014-12-01T06:14:46.151Z"
                                    },
                                    {
                                        "createdAt": "2014-12-01T03:34:40.425Z",
                                        "name": "myJob",
                                        "interval": 20000,
                                        "applicationId": "53d21c66e4b04663ccc7fbfd",
                                        "params": {
                                            "a": "b"
                                        },
                                        "objectId": "547be1d03004be9240f80a9a",
                                        "executeTime": 1417414500192,
                                        "desc": "my test02",
                                        "updatedAt": "2014-12-01T06:14:40.207Z"
                                    }
                                ]
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/tasks/{taskId}": {
            "get": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Get an special task Of Application",
                "description": "get an special task of the application in the cloud",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "the task objectId which you want to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return task detail message",
                        "schema": {
                            "$ref": "#/definitions/JobTask"
                        },
                        "examples": {
                            "application/json": {
                                "createdAt": "2014-12-01T03:07:26.388Z",
                                "name": "myJob",
                                "interval": 20000,
                                "applicationId": "53d21c66e4b04663ccc7fbfd",
                                "params": {
                                    "a": "b"
                                },
                                "objectId": "547bdb6e3004119e22ee7893",
                                "executeTime": 1417414506140,
                                "desc": "my test01",
                                "updatedAt": "2014-12-01T06:14:46.151Z"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/add": {
            "post": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Add An Task",
                "description": "add an task which will execute special job at special time",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "task message which you want to create",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "desc": {
                                    "type": "string",
                                    "description": "your special name for your current job"
                                },
                                "jobName": {
                                    "type": "string",
                                    "description": "the job name of Application definded which task run with"
                                },
                                "params": {
                                    "type": "string",
                                    "description": "the params which task will execute job with"
                                },
                                "startTimestamp": {
                                    "type": "string",
                                    "description": "the time when job will execute job at,unit is second"
                                },
                                "interval": {
                                    "type": "integer",
                                    "description": "the interval time of job execute repetitive,default value is -1"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return task created info",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        },
                        "examples": {
                            "application/json": {
                                "objectId": "547c076430049df2a1add98a",
                                "createdAt": "2014-12-01T06:15:00.209Z"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/modify/{taskId}": {
            "post": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Modify An Special Task",
                "description": "modify an task which will execute special job at special time",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "task objectId which you want to modify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "job message which you want to modify",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "desc": {
                                    "type": "string",
                                    "description": "your special name for your current job"
                                },
                                "jobName": {
                                    "type": "string",
                                    "description": "the job name of Application definded"
                                },
                                "params": {
                                    "type": "string",
                                    "description": "params which job will execute with"
                                },
                                "startTimestamp": {
                                    "type": "string",
                                    "description": "the time when job will execute at,unit is second"
                                },
                                "interval": {
                                    "type": "integer",
                                    "description": "the interval time of job execute repetitive,default value is -1"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return the task modified message",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        },
                        "examples": {
                            "application/json": {
                                "number": 1,
                                "updatedAt": "2014-12-01T06:15:00.209Z"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/delete/{taskId}": {
            "delete": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Delete An Special Task",
                "description": "delete an special task",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "task objectId which you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return task deleted message",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        },
                        "examples": {
                            "application/json": {
                                "number": 1,
                                "updatedAt": "2014-12-01T06:15:00.209Z"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/run/{taskId}": {
            "post": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "Run An Special Task",
                "description": "run an special task right away",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "task objectId which you want to run right away",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return the status of task running",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "description": "Whether has been successful"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/scheduler/status": {
            "get": {
                "tags": [
                    "Scheduler"
                ],
                "summary": "List Tasks Running Status Of Application Matches The Query",
                "description": "list tasks running status of the application in the cloud",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK,and return tasks running status info",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "description": "",
                                    "items": {
                                        "properties": {
                                            "updatedAt": {
                                                "type": "string",
                                                "description": "the time last updated at"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "task remark message"
                                            },
                                            "startTimeStamp": {
                                                "type": "string",
                                                "description": "the time of task started at "
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "the status of task",
                                                "enum": [
                                                    "RUNNING",
                                                    "SUCCEEDED",
                                                    "FAILED",
                                                    "HANGING",
                                                    "EXPIRE"
                                                ]
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "description": "the time of created at"
                                            },
                                            "objectId": {
                                                "type": "string",
                                                "description": "task status log id in database"
                                            },
                                            "applicationID": {
                                                "type": "string",
                                                "description": "application id"
                                            },
                                            "endTimeStamp": {
                                                "type": "string",
                                                "description": "the time of task finished at "
                                            },
                                            "jobName": {
                                                "type": "string",
                                                "description": "the job name of Application definded which task run with"
                                            },
                                            "taskID": {
                                                "type": "string",
                                                "description": "task id which status belong to"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "updatedAt": "2014-10-11T05:40:54.636Z",
                                        "message": null,
                                        "startTimeStamp": 1413100063,
                                        "status": "SUCCEEDED",
                                        "createdAt": "2014-10-11T05:40:54.636Z",
                                        "objectId": "5438c2e630049ee6a03b63d2",
                                        "applicationID": "53a8fb2530042872f0bf39db",
                                        "endTimeStamp": 1413000069,
                                        "jobName": "test",
                                        "taskID": "80fc42de-13ef-4549-8d3d-ee7c7edb9ca8"
                                    },
                                    {
                                        "updatedAt": "2014-10-11T05:40:18.344Z",
                                        "message": null,
                                        "startTimeStamp": 1413100063,
                                        "status": "SUCCEEDED",
                                        "createdAt": "2014-10-11T05:40:18.344Z",
                                        "objectId": "5438c2c230049ee6a03b63d0",
                                        "applicationID": "53a8fb2530042872f0bf39db",
                                        "endTimeStamp": 1413000069,
                                        "jobName": "test",
                                        "taskID": "80fc42de-13ef-4549-8d3d-ee7c7edb9ca8"
                                    }
                                ]
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs": {
            "post": {
                "summary": "create segment",
                "tags": [
                    "Segment"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "segment",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": ""
                                },
                                "criteria": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "type": "object",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/{segId}": {
            "delete": {
                "tags": [
                    "Segment"
                ],
                "summary": "delete segment",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segId",
                        "description": "ID of segment that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "get segment by segId",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segId",
                        "description": "ID of segment that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Segment"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/count/{segId}": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "count total appUsers by segment",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segId",
                        "description": "ID of segment that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "description": "the reuslt of AppUser count."
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/install/{installId}": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "load all segments which belong the AppUser",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "installId",
                        "description": "ID of segment that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of segments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Segment"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/installDy/{installId}": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "load all dynamic segments which belong the AppUser",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "installId",
                        "description": "ID of segment that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of segments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Segment"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/query": {
            "post": {
                "tags": [
                    "Segment"
                ],
                "summary": "Find All Segmetns Matchs The Query",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "query segments",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of segments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Segment"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/appUser/{segId}": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "Find AppUser Matchs The segemt",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segId",
                        "required": true,
                        "description": ".",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of segments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Segment"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/segs/appUser": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "load AppUser which belong the app",
                "description": ".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "appId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "description": ".",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": ".",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of AppUser",
                        "schema": {
                            "type": "array",
                            "description": "an array of appUser",
                            "items": {
                                "type": "object",
                                "description": "the AppUser object"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/country": {
            "get": {
                "summary": "get country",
                "tags": [
                    "Location"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "get country",
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/country/sub": {
            "get": {
                "summary": "get country city",
                "tags": [
                    "Location"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "get country city",
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CountryCity"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/country/location": {
            "get": {
                "summary": "get country city by ip",
                "tags": [
                    "Location"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "get country city by ip",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ip",
                        "description": "",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GeoLocation"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/lang": {
            "get": {
                "summary": "get lang  by lang code",
                "tags": [
                    "Location"
                ],
                "produces": [
                    "application/json"
                ],
                "description": ".",
                "parameters": [
                    {
                        "in": "query",
                        "name": "langCode",
                        "description": "",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lang"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payments": {
            "post": {
                "summary": "create payments",
                "tags": [
                    "Payments"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "used by client(android,ios)",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": ".",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Payment"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/section": {
            "post": {
                "summary": "create section",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "section",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FaqSection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "load section by Query",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "langCode",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FaqSection"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/section/{objectId}": {
            "get": {
                "summary": "get section by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "section id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FaqSection"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete section by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "section id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "update section by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "section id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/FaqSection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/section/app": {
            "post": {
                "summary": "load section by Query with Post method",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "section",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FaqSection"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/section/seq/{objectId}": {
            "put": {
                "summary": "update section sequence by id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "udpate section's sequence",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "preSeq": {
                                    "type": "number"
                                },
                                "nextSeq": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/item": {
            "post": {
                "summary": "create faq item",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "faq item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FaqItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Find All the app's item Matchs The Query",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "langCode",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/item/{objectId}": {
            "get": {
                "summary": "get faq item by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "item Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FaqItem"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete item by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "item id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "update item by Id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "item id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/FaqItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/item/count": {
            "get": {
                "summary": "get total count of faq item",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": ".",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CountMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/item/seq/{objectId}": {
            "put": {
                "summary": "update item's sequence by id",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "udpate item's sequence",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "preSeq": {
                                    "type": "number"
                                },
                                "nextSeq": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/faq/searchItem": {
            "get": {
                "summary": "search item",
                "tags": [
                    "FAQ"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "platform",
                        "description": ".",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "df",
                        "description": ".",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "langCode",
                        "description": ".",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "description": ".",
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "description": ".",
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "the search string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/tag": {
            "post": {
                "summary": "create tag",
                "tags": [
                    "Tag"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "tag",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Find All the tags Matchs The Query",
                "tags": [
                    "Tag"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/tag/{objectId}": {
            "delete": {
                "summary": "delete tag by id",
                "tags": [
                    "Tag"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "tag id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue": {
            "post": {
                "summary": "create Issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Issue object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "get all Issues that match the Query object",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "type": "string",
                        "description": "search string"
                    },
                    {
                        "in": "query",
                        "name": "msgValidTime",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Issue"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/create": {
            "post": {
                "summary": "create Issue. for web console",
                "description": "this implement only used for web console.",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Issue object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/{objectId}": {
            "put": {
                "summary": "update Issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "Issue Id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "get Issue by Id",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "Issue Id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Issue"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delelte Issue by Id",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "Issue Id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/count": {
            "post": {
                "summary": "get total number of Issue that match the query",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": "query string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CountMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/close/{objectId}": {
            "put": {
                "summary": "close Issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "Issue Id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/batch": {
            "put": {
                "summary": "batch update Issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": ".",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "issues": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "0",
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5"
                                    ],
                                    "description": "created(0),inprogress(1),resolved(2),rejected(3),closeByAppUser(4) ,closeBySystem(5)"
                                },
                                "msg": {
                                    "$ref": "#/definitions/IssueMsg"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/find": {
            "post": {
                "summary": "find Issue for client",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "query object",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/msg/{issueId}": {
            "post": {
                "summary": "add msg to issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "issueMsg",
                        "schema": {
                            "$ref": "#/definitions/IssueMsg"
                        }
                    },
                    {
                        "in": "path",
                        "name": "issueId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/sview": {
            "post": {
                "summary": "create smart view",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "smart view",
                        "schema": {
                            "$ref": "#/definitions/SmartView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "get all smart view tha match the query object",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "where",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "excludeKeys",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SmartView"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/sview/{objectId}": {
            "get": {
                "summary": "get smart view by Id",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "smart view",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SmartView"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "update smart view by Id",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "smart view",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SmartView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SmartView"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete smart view",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "smart view",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/sview/seq/{objectId}": {
            "post": {
                "summary": "update smart view sequence",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "smart view",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "preSeq": {
                                    "type": "number"
                                },
                                "nextSeq": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "smart view",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/notification": {
            "get": {
                "summary": "get notification",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IssueNotification"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "clear notification",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "issues": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IssueNotification"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/devicInfo/{issueId}": {
            "get": {
                "summary": "get issue's device info",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issueId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/log/{issueId}": {
            "get": {
                "summary": "get issue's log info",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issueId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/help/issue/searchIssue": {
            "get": {
                "summary": "search issue",
                "tags": [
                    "Issue"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "df",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "where",
                        "type": "string",
                        "description": "the standar query string"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "the search string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Issue"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/card": {
            "post": {
                "summary": "bind a card",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "number": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "expMonth": {
                                    "type": "integer"
                                },
                                "expYear": {
                                    "type": "integer"
                                },
                                "cvc": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "get cards",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Card"
                                    }
                                },
                                "defaultSource": {
                                    "type": "string",
                                    "description": "default card"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/card/{cardId}": {
            "delete": {
                "summary": "unbind a card",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cardId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/default/card/{cardId}": {
            "delete": {
                "summary": "set default card",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cardId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/find": {
            "post": {
                "summary": "get bill which match the query",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "description": "if the parameters is blank,the result is current month bill",
                            "properties": {
                                "date": {
                                    "type": "integer"
                                },
                                "endDate": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bill"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/level": {
            "get": {
                "summary": "get customer level",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillPlan"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/billing/level/{level}": {
            "put": {
                "summary": "set customer level",
                "tags": [
                    "Billing"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "level",
                        "type": "string",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "description": "Starter(0),Pro(1),Business(2),Enterprise(3)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/analytics/sql": {
            "post": {
                "summary": "get analytics data by the sql query",
                "tags": [
                    "Analytics"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "description": "...",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "sql": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnaSql"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/analytics/at": {
            "post": {
                "summary": "analytics tracking",
                "tags": [
                    "Analytics"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Payment"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnaTracking"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Login with Anonymous",
                "description": "Login or register with AuthData",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "authData": {
                                    "type": "object",
                                    "properties": {
                                        "facebook": {
                                            "$ref": "#/definitions/Anonymous"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sessionToken": {
                                    "type": "string"
                                },
                                "authData": {
                                    "type": "object",
                                    "properties": {
                                        "facebook": {
                                            "$ref": "#/definitions/Anonymous"
                                        }
                                    }
                                },
                                "objectId": {
                                    "type": "string"
                                },
                                "installationIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get User List.",
                "description": "",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "An array of user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "summary": "Update the user",
                "description": "",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the user",
                "description": "Get the user information by id",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete  user",
                "description": "Delete the user by id",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "summary": "User profile.",
                "description": "Get the user's profile",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestPasswordReset": {
            "post": {
                "summary": "request password reset",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestEmailVerify": {
            "post": {
                "summary": "request verify email",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/verifyEmail/{sessionToken}": {
            "get": {
                "summary": "verify user's email",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "sessionToken",
                        "type": "string",
                        "description": "sessionToken",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/resetPassword": {
            "post": {
                "summary": "reset user's password",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "newPassword",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "newPassword": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "post": {
                "summary": "Create the role",
                "description": "",
                "tags": [
                    "Role"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Roles List.",
                "description": "",
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "An array of role",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles/{roleId}": {
            "put": {
                "summary": "Update the role",
                "description": "",
                "tags": [
                    "Role"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the role by id",
                "description": "",
                "tags": [
                    "Role"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the role by id",
                "description": "",
                "tags": [
                    "Role"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adCampaigns": {
            "post": {
                "summary": "Create the ad Campaign",
                "tags": [
                    "Adv"
                ],
                "description": "Create the ad Campaign",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AdCampaign",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": ""
                                },
                                "desc": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get  ad Campaigns",
                "tags": [
                    "Adv"
                ],
                "description": "Get all ad Campaigns",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdCampaign"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adCampaigns/{objectId}": {
            "put": {
                "summary": "Update the ad Campaign",
                "tags": [
                    "Adv"
                ],
                "description": "Update the ad Campaign",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AdCampaign",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": ""
                                },
                                "desc": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the ad Campaign",
                "tags": [
                    "Adv"
                ],
                "description": "Get the ad Campaign by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdCampaign"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the ad Campaign",
                "tags": [
                    "Adv"
                ],
                "description": "Delete the ad Campaign",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adCampaigns/{objectId}/schedules": {
            "get": {
                "summary": "Get  ad Schedules",
                "tags": [
                    "Adv"
                ],
                "description": "Get all ad Schedules",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdSchedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adSchedules": {
            "post": {
                "summary": "Create the ad Schedule",
                "tags": [
                    "Adv"
                ],
                "description": "Create the ad Schedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AdSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adSchedules/{objectId}": {
            "put": {
                "summary": "Update the ad Schedule",
                "tags": [
                    "Adv"
                ],
                "description": "Update the ad Schedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AdSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the ad Schedule",
                "tags": [
                    "Adv"
                ],
                "description": "Get the ad Schedule by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdSchedule"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the ad Schedule",
                "tags": [
                    "Adv"
                ],
                "description": "Delete the ad Schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adSchedules/{objectId}/creatives": {
            "get": {
                "summary": "Get ad Creatives",
                "tags": [
                    "Adv"
                ],
                "description": "Get all ad Creatives",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdCreative"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/adCreatives": {
            "post": {
                "summary": "Create the ad Creative",
                "tags": [
                    "Adv"
                ],
                "description": "Create the ad Creative",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Creative",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdCreative"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaveMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Creative/{objectId}": {
            "put": {
                "summary": "Update the ad Creative",
                "tags": [
                    "Adv"
                ],
                "description": "Update the ad Creative",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AdCreative",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdCreative"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the ad Creative",
                "tags": [
                    "Adv"
                ],
                "description": "Get the ad Creative by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdCreative"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the ad Creative",
                "tags": [
                    "Adv"
                ],
                "description": "Delete the ad Creative",
                "parameters": [
                    {
                        "in": "path",
                        "name": "objectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteMsg"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/advs": {
            "post": {
                "summary": "Request the adv",
                "tags": [
                    "Adv"
                ],
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Adv",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reqId": {
                                    "type": "string"
                                },
                                "appId": {
                                    "type": "string"
                                },
                                "platform": {
                                    "type": "string",
                                    "description": "ios, android"
                                },
                                "deviceModel": {
                                    "type": "string",
                                    "description": "ios -->  iphone, ipad;android --> phone, tablet"
                                },
                                "locale": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "custom(0), intertitial(1)"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdCreative"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/trackings": {
            "post": {
                "summary": "The adv trackings",
                "tags": [
                    "Adv"
                ],
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Tracking",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": {
                                    "type": "string"
                                },
                                "scheduleId": {
                                    "type": "string"
                                },
                                "sourceAppId": {
                                    "type": "string"
                                },
                                "deviceModel": {
                                    "type": "string",
                                    "description": "ios -->  iphone, ipad;android --> phone, tablet"
                                },
                                "national": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "step": {
                                    "type": "string",
                                    "description": "The step value is in (0,1,2)"
                                },
                                "os": {
                                    "type": "string"
                                },
                                "appUserId": {
                                    "type": "string"
                                },
                                "channel": {
                                    "type": "string"
                                },
                                "appVersion": {
                                    "type": "string"
                                },
                                "deviceId": {
                                    "type": "string"
                                },
                                "sdkVersion": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/files/{name}": {
            "put": {
                "tags": [
                    "File"
                ],
                "description": "upload,download and delete file\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of file",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Fileobjectmeta"
                        }
                    },
                    "400": {
                        "description": "error"
                    },
                    "401": {
                        "description": "auth failed"
                    }
                }
            }
        },
        "/files": {
            "parameters": [
                {
                    "name": "X-LAS-Fid",
                    "in": "header",
                    "description": "the file name",
                    "required": false,
                    "type": "string",
                    "format": "string"
                }
            ],
            "get": {
                "tags": [
                    "File"
                ],
                "description": "get  metadata of specific one with X-LAS-Fid or all files.",
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Fileobjectmeta"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "File"
                ],
                "description": "delete a file",
                "responses": {
                    "204": {
                        "description": "successfully delete"
                    }
                }
            }
        },
        "/privateFiles/fileop/{name}": {
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "format": "string"
                },
                {
                    "name": "locale",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "string"
                }
            ],
            "put": {
                "tags": [
                    "File"
                ],
                "parameters": [
                    {
                        "name": "overwrite",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "description": "upload file",
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "$ref": "#/definitions/Filemeta"
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "409": {
                        "description": "path already exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "File"
                ],
                "description": "download file",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "File"
                ],
                "description": "delete a file or directory",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Filemeta"
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            }
        },
        "/privateFiles/metaData/{name}": {
            "get": {
                "tags": [
                    "File"
                ],
                "description": "get infomation of file or directory",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "path": {
                                    "type": "string"
                                },
                                "bytes": {
                                    "type": "number",
                                    "format": "int64"
                                },
                                "createdAt": {
                                    "type": "string"
                                },
                                "updatedAt": {
                                    "type": "string"
                                },
                                "hash": {
                                    "type": "string"
                                },
                                "is_dir": {
                                    "type": "boolean"
                                },
                                "contents": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Filemeta"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "404": {
                        "description": "path not found",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            }
        },
        "/privateFiles/createFold/{name}": {
            "post": {
                "tags": [
                    "File"
                ],
                "description": "create folders",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "$ref": "#/definitions/Filemeta"
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "409": {
                        "description": "path already exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            }
        },
        "/privateFiles/copy": {
            "post": {
                "tags": [
                    "File"
                ],
                "description": "copy a file or directory",
                "parameters": [
                    {
                        "name": "from_path",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "to_path",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Filemeta"
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "404": {
                        "description": "source path doest not exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "409": {
                        "description": "destination path already exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            }
        },
        "/privateFiles/move": {
            "post": {
                "tags": [
                    "File"
                ],
                "description": "move a file or directory",
                "parameters": [
                    {
                        "name": "from_path",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "to_path",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/Filemeta"
                        }
                    },
                    "400": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "404": {
                        "description": "source path doest not exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    },
                    "409": {
                        "description": "destination path already exists",
                        "schema": {
                            "$ref": "#/definitions/exception"
                        }
                    }
                }
            }
        },
        "/marketing": {
            "post": {
                "summary": "Create New Marketing Task",
                "description": "Create an new marketing task which can be InApp or Push type. And can set different status,just like Active(1),Deactivated(2),Expired(3),Scheduled(4),Completed(5),Error(100).\n",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The content of new Marketing Task.",
                        "required": true,
                        "type": "object",
                        "format": "json",
                        "schema": {
                            "$ref": "#/definitions/MarketingRequest"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the objectId Number and createdAt time of new Marketing Task.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "objectId": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the all of campaignList.",
                "description": "Can get a campaignList which include of all marketing tasks' contents.\n",
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The responses of Marketing.",
                        "schema": {
                            "$ref": "#/definitions/MarketingResponse"
                        }
                    }
                }
            }
        },
        "/marketing/push/msg": {
            "post": {
                "summary": "Push Marketing Message by Google Service",
                "description": "In Maxleap.com environment, users can push marketing message by google service with deviceToken.\n",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user should provide deviceToken and the content of push message.",
                        "required": true,
                        "type": "object",
                        "schema": {
                            "$ref": "#/definitions/MarketingPushMessage"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the result of push message",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": ""
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/{objectId}": {
            "get": {
                "summary": "According to objectId, user get the content of one marketing task.",
                "description": "According to objectid, user can get the content of one marketing task.",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of Marketing Task.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the content of one marketing task with this objectId.",
                        "type": "object",
                        "format": "json",
                        "schema": {
                            "$ref": "#/definitions/MarketingObjectContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "According to objectId, user can update the content of one marketing task.",
                "description": "According to objectId, user can update the content of one marketing task.",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of Marketing Task.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of updated Marketing Task",
                        "required": true,
                        "type": "object",
                        "schema": {
                            "$ref": "#/definitions/MarketingObjectContent"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of update Marketing Task.",
                        "type": "object",
                        "format": "json",
                        "schema": {
                            "$ref": "#/definitions/UpdateMarketingObjectResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "According to objectId, user can delete the marketing task.",
                "description": "According to objectId, user can delete the marketing task.",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of Marketing Task.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of delete Marketing Task.",
                        "schema": {
                            "type": "object",
                            "format": "json",
                            "properties": {
                                "number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "default": 1
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/{objectId}/{status}": {
            "put": {
                "summary": "Update the status of this marketing campaign.",
                "description": "User can update the status of this marketing campaign by puting the content of status. And the status include of 'Draft(0),Active(1),Deactivated(2),Expired(3),Scheduled(4),Completed(5),Error(100)'.\n",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of marketing campaign.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "The Status' value number.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of update marketing campaign's status.",
                        "schema": {
                            "$ref": "#/definitions/UpdateMarketingStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/archived/{objectId}": {
            "put": {
                "summary": "Change the marketing campaign to archived.",
                "description": "Change the marketing campaign to archived. And the archived&un-archived just is the tags.\n",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of marketing campaign.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the result of change the marketing campaign to archived.",
                        "schema": {
                            "$ref": "#/definitions/ArchivedAndUnArchived"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/un-archived/{objectId}": {
            "put": {
                "summary": "Change the marketing campaign to un-archived.",
                "description": "Change the marketing campaign to un-archived. And the archived&un-archived just is the tags.",
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "An unique id number of Marketing Task.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the result of change the marketing campaign to un-archived.",
                        "schema": {
                            "$ref": "#/definitions/ArchivedAndUnArchived"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/in-app": {
            "post": {
                "summary": "According to the 'installId', SDK can check which In-app conforms to itself.",
                "description": "User make many In-app marketing campaigns, SDK can get campaignList which include of conform campaigns by installId.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SDK should pull the installId.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InAppRequest"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "An array of campaignList.",
                        "schema": {
                            "$ref": "#/definitions/InAppList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/count?where={}": {
            "get": {
                "summary": "Count the marketing campaign which match the query condition.",
                "description": "User can get the counts of marketing campaign which match the query condtion.",
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "type": "object",
                        "description": "The query statement which be included in the content of marketing campaign.",
                        "required": false,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of counting marketing campaign.",
                        "schema": {
                            "$ref": "#/definitions/CountMarketing"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/installations/count?where={}": {
            "get": {
                "summary": "Count the installations which match the query condition.",
                "description": "User can get the counts of installations which match the query condtion.",
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "type": "object",
                        "description": "The query statement which be included in the content of installations.",
                        "required": false,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of counting installations.",
                        "schema": {
                            "$ref": "#/definitions/CountInstallations"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error "
                        }
                    }
                }
            }
        },
        "/marketing/stat'": {
            "post": {
                "summary": "SDK send the event to analysis api.",
                "description": "SDK can send differente eventType to analysis api which can count the quantity of events.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "type": "object",
                        "description": "The request content which be sent to analysis api.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MarketingStat"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of pull event.",
                        "schema": {
                            "$ref": "#/definitions/EventResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/push/setting": {
            "post": {
                "summary": "User can update the appleConfig or gcmConfig.",
                "description": "In US server, user can update the appleConfig or gcmConfig by this api;In CN server, user just should update the appleConfig.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "type": "object",
                        "description": "The Key of appleConfig or gcmConfig.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigKey"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of pull event.",
                        "schema": {
                            "$ref": "#/definitions/SendConfigResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gopush/server/get": {
            "get": {
                "summary": "Get the address of Comet",
                "description": "The Android Push SDK should hold an socket with Marketing Push Server, firstly the SDK get address of Comet which is the Service Node of Marketing Push Server.The address is Array.\n",
                "parameters": [
                    {
                        "name": "k",
                        "in": "query",
                        "description": "SDK auto-create an Key which can be to discriminate every client by comet.",
                        "required": true,
                        "type": "string",
                        "format": "hexstring"
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "Connection Protocol.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Comets",
                        "schema": {
                            "$ref": "#/definitions/Comet"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/marketing/duplicate/{objectId}": {
            "post": {
                "summary": "Copy the Marketing campaign.",
                "description": "On the marketing campaign, User can copy an new another.\n",
                "parameters": [
                    {
                        "name": "objectid",
                        "in": "path",
                        "description": "An unique id number of marketing campaign.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User should pull the name of copy marketing campaign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DuplicateRequest"
                        }
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "The result of copy marketing campaign.",
                        "schema": {
                            "$ref": "#/definitions/DuplicateMarketing"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gopush/msg/get": {
            "get": {
                "summary": "Get the Offline Messages",
                "description": "The Android Push SDK will reconnect the comet, and firstly it will get the Offline Messages from Marketing Push Server.\n",
                "parameters": [
                    {
                        "name": "k",
                        "in": "query",
                        "description": "SDK auto-create an Key which can be to discriminate every client by comet.",
                        "required": true,
                        "type": "string",
                        "format": "hexstring"
                    },
                    {
                        "name": "m",
                        "in": "query",
                        "description": "Time Series(Get all Offline Messages when m=0).",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the json format of OfflineMessage file",
                        "schema": {
                            "$ref": "#/definitions/OfflineMessage"
                        }
                    },
                    "200+": {
                        "description": "No OfflineMessage",
                        "schema": {
                            "$ref": "#/definitions/NoOfflineMessage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gopush/time/get": {
            "get": {
                "summary": "Get the server's time",
                "description": "The Android Push SDK can get the server's time by this API.\n",
                "parameters": [
                    {
                        "name": "cb",
                        "in": "query",
                        "description": "The Android Push SDK can pull an string that can be the key of the server's time.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Push"
                ],
                "responses": {
                    "200": {
                        "description": "the timestamp of Push server",
                        "schema": {
                            "$ref": "#/definitions/ServerTime"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subs": {
            "post": {
                "summary": "Create a new subscription and check the uniqueness of Organization&Email.",
                "description": "User can create a new subscription with the permission of OrgUser.And the subscription have two types which include of 'App Summary--1'&'New Issue Event--2'.The App Summary have three periods which are 'Daily'&'Weekly'&'Monthly'.\n",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The content of subscription.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRequest"
                        }
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "The response of create new subscription.",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subs/{objectId}": {
            "get": {
                "summary": "Get the content of the subscription.",
                "description": "User can get the content of the subscription with objectId.\n",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "the unique number of subscription.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the content of the subscription with objectId.",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the content of the subscription.",
                "description": "User can update the content of the subscription with objectId.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "the unique number of subscription.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "update the content of subscription.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRequest"
                        }
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of Updating the subscription.",
                        "schema": {
                            "$ref": "#/definitions/UpdateSubscriptionResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the subscription with the objectId.",
                "description": "User can delete the subscription with objectId, and user can not get the email of the subscription anymore.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "the unique number of subscription.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of deleting the subscription.",
                        "schema": {
                            "$ref": "#/definitions/DeleteSubscriptionResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subs/query": {
            "post": {
                "summary": "View the list of subscriptions.",
                "description": "User can get the list of subscriptions with any query condition.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "any query condition.",
                        "required": true,
                        "type": "object"
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the list of subscriptions with the query condition.",
                        "schema": {
                            "$ref": "#/definitions/QuerySubscriptionResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subMods": {
            "get": {
                "summary": "Get the list of modules which are visible to the users.",
                "description": "According to the permission level, Web can get the list of modules which are visible to the users.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of OrgUser.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "An array of visible modules.",
                        "schema": {
                            "$ref": "#/definitions/ModulesResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new module which is visible to the users.",
                "description": "Sysadmin can add new module which is visible to the roles.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of SystemAdmin.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of adding new module.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModuleRequest"
                        }
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "An array of visible modules.",
                        "schema": {
                            "$ref": "#/definitions/AddModuleResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subMods/{objectId}": {
            "get": {
                "summary": "Get the content of module with objectId.",
                "description": "According to the objectId, get the content of module.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of SystemAdmin.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "type": "string",
                        "description": "the unique number of module.",
                        "required": true
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the content of the module.",
                        "schema": {
                            "$ref": "#/definitions/ModuleResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the content of module with objectId.",
                "description": "According to the objectId, update the content of module.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of SystemAdmin.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "type": "string",
                        "description": "the unique number of module.",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of updating module.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModuleRequest"
                        }
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of updating module.",
                        "schema": {
                            "$ref": "#/definitions/UpdateModuleResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the module with objectId.",
                "description": "According to the objectId, delete the module.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of SystemAdmin.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "type": "string",
                        "description": "the unique number of module.",
                        "required": true
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of deleting module.",
                        "schema": {
                            "$ref": "#/definitions/DeleteModuleResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subMods/query": {
            "post": {
                "summary": "Get the modules with query condition.",
                "description": "According to the query condition, get the content of modules.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "type": "string",
                        "description": "the permission of SystemAdmin.",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the query condition.",
                        "type": "object",
                        "required": true
                    }
                ],
                "tags": [
                    "Subs"
                ],
                "responses": {
                    "200": {
                        "description": "The content of modules with query condition.",
                        "schema": {
                            "$ref": "#/definitions/QueryModuleResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestSmsCode": {
            "post": {
                "summary": "Get a mobilePhone message with captcha.",
                "description": "User can get a mobilePhone message with captcha by posting a mobilePhone number.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The mobilePhone number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumber"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "The response of posting the captcha.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/verifySmsCode": {
            "post": {
                "summary": "Verify the mobilePhone number and captcha.",
                "description": "User can verify the mobilePhone number and captcha.\n",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number and captcha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumberAndCaptcha"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "the result of verifying the mobilePhone and captcha.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request, the captcha is wrong or overdue.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeError"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestLoginSmsCode": {
            "post": {
                "summary": "Get the captcha of logining",
                "description": "If user want to login with mobilePhone and captcha, it can get the captcha using this api",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumber"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "the result of get the captcha of logining.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/loginByMobilePhone": {
            "post": {
                "summary": "Verify the captcha and login.",
                "description": "User can login with the captcha which is right and valid.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number and captcha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumberAndCaptcha"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "An recorded information of logining with mobilePhone and captcha.",
                        "schema": {
                            "$ref": "#/definitions/LoginMobilePhoneInformation"
                        }
                    },
                    "400": {
                        "description": "Bad Request, the captcha is wrong or overdue.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeError"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestMobilePhoneVerify": {
            "post": {
                "summary": "Get the captcha of registering.",
                "description": "In order to finish the register, user can get the captcha of registering actively.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumber"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "the result of geting captcha.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/verifyMobilePhone": {
            "put": {
                "summary": "Verify the captcha actively.",
                "description": "User can verify the captcha actively.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number and captcha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumberAndCaptcha"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "The result of verifying the captcha.",
                        "schema": {
                            "$ref": "#/definitions/PutVerifyResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request, the captcha is wrong or overdue.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeError"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requestPasswordResetBySmsCode": {
            "post": {
                "summary": "Get the captcha of reseting password.",
                "description": "According to this api, user can get the captcha of reseting password.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumber"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "the result of geting captcha.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/resetPasswordBySmsCode": {
            "put": {
                "summary": "Reset the password with SmsCode.",
                "description": "According to this api, user can reset the password with SmsCode.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "the unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-MasterKey",
                        "in": "header",
                        "description": "the permission of AppUser.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number and captcha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumberAndCaptchaAndPassword"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "The result of verifying the captcha.",
                        "schema": {
                            "$ref": "#/definitions/PutVerifyResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request, the captcha is wrong or overdue.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeError"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgUsers/requestPasswordResetBySmsCode": {
            "post": {
                "summary": "AppAdmin get the captcha of mobilePhone actively.",
                "description": "AppAdmin can request this api, and get the captcha of mobilePhone.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumber"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "The result of geting captcha.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgUsers/loginByMobilePhone": {
            "post": {
                "summary": "AppAdmin can login with mobilePhone and captcha.",
                "description": "When AppAdmin forget the login password, can login with mobilePhone and captcha.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the mobilePhone number and captcha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MobilePhoneNumberAndCaptcha"
                        }
                    }
                ],
                "tags": [
                    "Sms"
                ],
                "responses": {
                    "200": {
                        "description": "The result of login with mobilePhone and captcha.",
                        "schema": {
                            "$ref": "#/definitions/OrgUsersLoginByMobilePhone"
                        }
                    },
                    "400": {
                        "description": "Bad Request, the captcha is wrong or overdue.",
                        "schema": {
                            "$ref": "#/definitions/SmsCodeError"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/queryWithCreator?{limit}&{skip}&{email}": {
            "get": {
                "summary": "Get a list of organization infomations.",
                "description": "Admin console get a list of organization informations with email.According to the limit&skip,adminconsole can limit the number of list and control the number of one page.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the number of list.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the number of one page.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "the email of organization.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "The response of getting the organization informations.",
                        "schema": {
                            "$ref": "#/definitions/OrgsInformationsList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/queryWithCreator/{id}": {
            "get": {
                "summary": "Get the details of organization informations.",
                "description": "According to the objectId of organization, admin console can get the details of organization informations.\n",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique objectId of organization.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of getting the organization informations datails.",
                        "schema": {
                            "$ref": "#/definitions/OrgsInformationsDetails"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/disable": {
            "post": {
                "summary": "Disable the organization account.",
                "description": "Admin console user can disable the organization account by this rest api.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of orgIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrgsAccounts"
                        }
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of disabling the organization account.",
                        "schema": {
                            "$ref": "#/definitions/OrgsResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/enable": {
            "post": {
                "summary": "Enable the organization account.",
                "description": "Admin console user can enable the organization account by this rest api.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of orgIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrgsAccounts"
                        }
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of enabling the organization account.",
                        "schema": {
                            "$ref": "#/definitions/OrgsResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/{id}/usages?{start}&{end}&{appId}": {
            "get": {
                "summary": "The using profiles of organization account.",
                "description": "Admin console get the using profiles of organization account with appId during the start time and endtime.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the objectId of organization account.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "the start time of using profiles.",
                        "required": true,
                        "type": "string",
                        "default": 20151201
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "the end time of using profiles.",
                        "required": true,
                        "type": "string",
                        "default": 20151230
                    },
                    {
                        "name": "appId",
                        "in": "query",
                        "description": "the unique ID number of organization account.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result about content of using profiles.",
                        "schema": {
                            "$ref": "#/definitions/OrgsUsingProfiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/{id}/orgUsers": {
            "get": {
                "summary": "Get a list of orgUsers about this organization.",
                "description": "According to the objectId about organization, admin console can get a list of orgUsers.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique Id number about organization.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result about orgUsers.",
                        "schema": {
                            "$ref": "#/definitions/OrgsUsersList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgs/{id}/apps": {
            "get": {
                "summary": "Get a list of orgApps about this organization.",
                "description": "According to the objectId about organization, admin console can get a list of orgApps.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique Id number about organization.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "The result about orgApps.",
                        "schema": {
                            "$ref": "#/definitions/OrgsAppsList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgUsers/enable": {
            "post": {
                "summary": "Enable the organization users with orgUserIds.",
                "description": "According to these orgUserIds, admin console can enable&disable these organization users.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of orgUserIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrgsUsers"
                        }
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of enabling organization users.",
                        "schema": {
                            "$ref": "#/definitions/OrgsResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgUsers/disable": {
            "post": {
                "summary": "Disable the organization users with orgUserIds.",
                "description": "According to these orgUserIds, admin console can enable&disable these organization users.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of orgUserIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrgsUsers"
                        }
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of disabling organization users.",
                        "schema": {
                            "$ref": "#/definitions/OrgsResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orgUsers/activate": {
            "post": {
                "summary": "Admin console can activate the orgUsers with orgUserIds.",
                "description": "Admin console can activate the orgUsers who have registerd but not verify the email.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of orgUserIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrgsUsers"
                        }
                    }
                ],
                "tags": [
                    "Orgs"
                ],
                "responses": {
                    "200": {
                        "description": "The result of activating organization users.",
                        "schema": {
                            "$ref": "#/definitions/OrgsResult"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/msgs": {
            "post": {
                "summary": "Send messages on admin console.",
                "description": "Admin console can send messages which have many properties about title&type&content&receivers.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of message.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MsgsContent"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "The response of sending a message.",
                        "schema": {
                            "$ref": "#/definitions/MsgsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/msgs?{type}&{limit}&{skip}": {
            "get": {
                "summary": "Get a list of messages.",
                "description": "According to the type of messages, admin console can get a list of messages with this type, following the 'limit'&'skip' properties.\n",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "the type of message,ALERT(0),NOTICE(1),UPDATE(2),OTHER(3).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the list number of one page.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the start number of this page.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the response about list of messages.",
                        "schema": {
                            "$ref": "#/definitions/MsgsListResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/msgs/{id}": {
            "get": {
                "summary": "Get the details of this message.",
                "description": "According to the objectId, admin console can get the details of this message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique ID number of message.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the response about details of this message.",
                        "schema": {
                            "$ref": "#/definitions/MsgsDetails"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the details of this message",
                "description": "According to the objectId, admin console can update the details of this message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique ID number of message.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of updating details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MsgsUpdateDetails"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the response of updating the message details.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the message with objectId.",
                "description": "According to the objectId, admin console can delete the message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique ID number of message.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of deleting the message with objectId.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/admin/msgs/batchDelete": {
            "post": {
                "summary": "BatchDelete the messages.",
                "description": "According to a array with messageIds, can batchdelete the messages.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of admin console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about a array of messageIds.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MsgsIds"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of batchDeleting the messages.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs/count?{status}": {
            "get": {
                "summary": "Get the number of messages with this status.",
                "description": "App developer can get the number of messages with this status.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "the status of messages.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the count of messages with this status.",
                        "schema": {
                            "$ref": "#/definitions/AppMsgsCount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs?{type}&{limit}&{skip}": {
            "get": {
                "summary": "Get a list of messages with this type.",
                "description": "According to the type, app developer can get a list of message with this type,following the 'limit'&'skip' properties.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "the type of message,ALERT(0),NOTICE(1),UPDATE(2),OTHER(3).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "the list number of one page.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the start number of this page.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result about a list of messages.",
                        "schema": {
                            "$ref": "#/definitions/AppMsgsList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs/{id}": {
            "get": {
                "summary": "Get the details of message with this id.",
                "description": "According to the objectId, app developer can get the details of this message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique Id number of message.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "The result about the details of message.",
                        "schema": {
                            "$ref": "#/definitions/AppMsgsDetails"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the message with this id.",
                "description": "According to the objectId, app developer can delete the message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique Id number of message.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "The result about deleting this message.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs/status/{id}": {
            "put": {
                "summary": "Edit the status of message with this id.",
                "description": "According to the id, app developer can edit the status of this message.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique Id number of message.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about status.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppMsgsStatusRequest"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of enabling organization users.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs/status/batch": {
            "put": {
                "summary": "Batch edit the status of message with these ids.",
                "description": "According to these ids, app developer can edit the status of these messages.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about status and ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppMsgsStatusBatchRequest"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "the result of enabling organization users.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/msgs/batchDelete": {
            "post": {
                "summary": "Batch delete these messages with ids.",
                "description": "According to these ids, app developer can batch delete these messsages.",
                "parameters": [
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of app console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the request body about these ids of messages.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppMsgsIds"
                        }
                    }
                ],
                "tags": [
                    "Msgs"
                ],
                "responses": {
                    "200": {
                        "description": "The result of activating organization users.",
                        "schema": {
                            "$ref": "#/definitions/MsgsEditResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/bill": {
            "post": {
                "summary": "Payment",
                "description": "SDK platform can do payment operation by using this api.\n",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of payment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaxPayBillRequestContent"
                        }
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The content of payment response.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayBillResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/records": {
            "post": {
                "summary": "Query payment with condition.",
                "description": "Console can query payment by using this api. According to the content of request,  it can get an array of payments with these conditions.\n",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of payment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaxPayRecordsRequestContent"
                        }
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payments with these conditions.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayRecordsResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/channel": {
            "post": {
                "summary": "Create or Update an new configuration of payment channel.",
                "description": "Console can create or update an configuration of payment channel which included in the content of request.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of payment.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaxPayChannelRequestContent"
                        }
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of creating or updating the configuration.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayChannelResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the infomation of payment channel.",
                "description": "The console system can get the information of payment channel using this api.By the way, you should input the name of channel.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of channel.By the way, if you don't input the name, you can get the infomation of all payment channels.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The configuration of channel with this name or all channels.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayChannelGetResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the configuration of payment channel.",
                "description": "According to name, console can delete the configuration of payment channel.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of channel.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of deleting the configuration of payment channel.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayChannelResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/webhook": {
            "post": {
                "summary": "Create or Update an new configuration of webhook.",
                "description": "Console system can create or update an configuration of webhook using this api.\n",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "the content of webhook.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookRequestContent"
                        }
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of creating or updating webhook.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the information of webhooks.",
                "description": "Console system can get the information of webhooks.By the way, if you don't input the webhook id number, you can get the information of all webhooks.\n",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique ID number of webhook.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "the content of webhook.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookGetResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the webhook with the ID number.",
                "description": "Console system can delete the webhook with this ID number.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the unique ID number of webhook.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of deleting webhook.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookDeleteResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/webhooktest": {
            "post": {
                "summary": "Test the status of webhook.",
                "description": "Console system can test the status of webhook with the ID number.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The content of testing.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookTestRequestContent"
                        }
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of webhook testing.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookTestResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/maxpay/config": {
            "delete": {
                "summary": "Delete all configurations which include webhook and payment channel.",
                "description": "Console system can delete all configurations of webhook and payment channel.",
                "parameters": [
                    {
                        "name": "X-LAS-AppId",
                        "in": "header",
                        "description": "An unique ID number of application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-LAS-Session-Token",
                        "in": "header",
                        "description": "the permission of console.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "MaxPay"
                ],
                "responses": {
                    "200": {
                        "description": "The result of deleting the configuration of webhook and payment channel.",
                        "schema": {
                            "$ref": "#/definitions/MaxPayWebhookDeleteResponseContent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Application": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of application"
                },
                "category": {
                    "type": "string",
                    "description": "category of application"
                },
                "description": {
                    "type": "string",
                    "description": "description of application"
                },
                "secret": {
                    "type": "string",
                    "description": "secret of application"
                },
                "orgId": {
                    "type": "string",
                    "description": "orgId of application."
                },
                "orgUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blackList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clientKey": {
                    "type": "string",
                    "description": "client key of application."
                },
                "javascriptKey": {
                    "type": "string",
                    "description": "javascript key of application."
                },
                "netKey": {
                    "type": "string",
                    "description": "net key of application."
                },
                "restAPIKey": {
                    "type": "string",
                    "description": "rest API key of application."
                },
                "masterKey": {
                    "type": "string",
                    "description": "masterKey of application."
                },
                "enableCreateObject": {
                    "type": "boolean"
                },
                "defaultLang": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        },
                        "desc": {
                            "type": "string"
                        },
                        "icon": {
                            "type": "string"
                        },
                        "production": {
                            "type": "boolean"
                        }
                    }
                },
                "emailConfig": {
                    "type": "object",
                    "properties": {
                        "pwdResetPage": {
                            "type": "string"
                        },
                        "pwdSucessPage": {
                            "type": "string"
                        },
                        "verifySucessPage": {
                            "type": "string"
                        },
                        "verifyPage": {
                            "type": "string"
                        },
                        "invalidLinkPage": {
                            "type": "string"
                        },
                        "verifyEmail": {
                            "type": "boolean"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                },
                "rateLimit": {
                    "type": "number"
                },
                "os": {
                    "type": "string",
                    "description": "os of application."
                },
                "orgDisabled": {
                    "type": "boolean"
                },
                "appType": {
                    "type": "string",
                    "description": "appType of application."
                }
            }
        },
        "Query": {
            "properties": {
                "where": {
                    "type": "string",
                    "description": "."
                },
                "order": {
                    "type": "string",
                    "description": "."
                },
                "keys": {
                    "type": "string",
                    "description": "."
                },
                "excludeKeys": {
                    "type": "string",
                    "description": "."
                },
                "include": {
                    "type": "string",
                    "description": "."
                },
                "limit": {
                    "type": "integer",
                    "description": "."
                },
                "skip": {
                    "type": "integer",
                    "description": "."
                }
            }
        },
        "UpdateMsg": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "."
                },
                "updatedAt": {
                    "type": "integer",
                    "description": "."
                }
            }
        },
        "SaveMsg": {
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "."
                },
                "createdAt": {
                    "type": "integer",
                    "description": "."
                }
            }
        },
        "DeleteMsg": {
            "properties": {
                "number": {
                    "type": "integer",
                    "description": "."
                }
            }
        },
        "Error": {
            "properties": {
                "errorMessage": {
                    "type": "string",
                    "description": "."
                },
                "errorCode": {
                    "type": "integer",
                    "description": "."
                }
            }
        },
        "ConsoleLog": {
            "properties": {
                "updatedAt": {
                    "type": "string",
                    "description": "last updated time at"
                },
                "message": {
                    "type": "string",
                    "description": "info log detail message"
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "INFO",
                        "ERROR"
                    ],
                    "description": "log level"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created time at"
                },
                "objectId": {
                    "type": "string",
                    "description": "log id"
                }
            }
        },
        "JobTask": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "the time created at"
                },
                "name": {
                    "type": "string",
                    "description": "the job name of Application definded which task run with"
                },
                "interval": {
                    "type": "integer",
                    "description": "the interval time of task execute job repetitive,default value is -1"
                },
                "applicationId": {
                    "type": "string",
                    "description": "application id"
                },
                "params": {
                    "type": "string",
                    "description": "params which task will execute job with"
                },
                "objectId": {
                    "type": "string",
                    "description": "task id in database"
                },
                "executeTime": {
                    "type": "string",
                    "description": "the time when task will execute job at,unit is second"
                },
                "desc": {
                    "type": "string",
                    "description": "your task name for your current job"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "the time last updated at"
                }
            }
        },
        "Segment": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "."
                },
                "name": {
                    "type": "string",
                    "description": "."
                },
                "createBy": {
                    "type": "string",
                    "description": "."
                },
                "analyze": {
                    "type": "boolean",
                    "description": "."
                },
                "visible": {
                    "type": "boolean",
                    "description": "."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "created(0),inprogress(1), finish(2),error(3);"
                },
                "criteria": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "body": {
                            "type": "object"
                        }
                    },
                    "description": "."
                }
            }
        },
        "PushTask": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "INIT",
                        "SCHEDULE",
                        "DONE",
                        "TODO",
                        "ABORT"
                    ]
                },
                "where": {
                    "type": "string",
                    "description": "."
                },
                "data": {
                    "type": "array",
                    "description": ".",
                    "items": {
                        "type": "string"
                    }
                },
                "pushTime": {
                    "type": "integer"
                },
                "expirationTimeType": {
                    "type": "string",
                    "enum": [
                        "never",
                        "interval",
                        "time"
                    ]
                },
                "expirationTime": {
                    "type": "integer"
                },
                "expirationUnits": {
                    "type": "string",
                    "enum": [
                        "hours",
                        "days"
                    ]
                },
                "segExp": {
                    "type": "string",
                    "description": "push the devcie that match the segment"
                }
            }
        },
        "CountryCity": {
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "subdivision_name": {
                    "type": "string"
                }
            }
        },
        "Country": {
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "country_iso_code": {
                    "type": "string"
                }
            }
        },
        "Lang": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nativeName": {
                    "type": "string"
                }
            }
        },
        "GeoLocation": {
            "properties": {
                "geoname_id": {
                    "type": "string"
                },
                "continent_code": {
                    "type": "string"
                },
                "continent_name": {
                    "type": "string"
                },
                "country_iso_code": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                },
                "subdivision_iso_code": {
                    "type": "string"
                },
                "subdivision_name": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "metro_code": {
                    "type": "string"
                },
                "time_zone": {
                    "type": "string"
                }
            }
        },
        "Payment": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "productid": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "priceAmount": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "installationId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "priceDollar": {
                    "type": "number"
                },
                "userId": {
                    "type": "string"
                },
                "nation": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "userCreateTime": {
                    "type": "integer"
                },
                "channel": {
                    "type": "string"
                },
                "appVersion": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "paySource": {
                    "type": "string"
                },
                "historyPayment": {
                    "type": "number"
                },
                "sessionId": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                }
            }
        },
        "FaqSection": {
            "properties": {
                "seq": {
                    "type": "number"
                },
                "appId": {
                    "type": "string"
                },
                "langcode": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "langName": {
                    "type": "string"
                }
            }
        },
        "FaqItem": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "attach": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "langCode": {
                    "type": "string"
                },
                "langName": {
                    "type": "string"
                },
                "sectionId": {
                    "type": "string"
                },
                "platform": {
                    "type": "string",
                    "enum": [
                        "0",
                        "1",
                        "2"
                    ],
                    "description": "ios(0),android(1),win8(2)"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "seq": {
                    "type": "number"
                },
                "orgId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                }
            }
        },
        "CountMsg": {
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "Tag": {
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "UserInfo": {
            "properties": {
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userTYpe": {
                    "type": "integer"
                }
            }
        },
        "IssueMsg": {
            "properties": {
                "content": {
                    "type": "string"
                },
                "attach": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "string"
                },
                "userInfo": {
                    "$ref": "#/definitions/UserInfo"
                },
                "msgType": {
                    "type": "string",
                    "enum": [
                        "0",
                        "1"
                    ],
                    "description": " privacy(0),open(1);"
                }
            }
        },
        "Issue": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "appId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "installId": {
                    "type": "string"
                },
                "lastReply": {
                    "type": "integer"
                },
                "waitTime": {
                    "type": "integer"
                },
                "langCode": {
                    "type": "string"
                },
                "langName": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "userInfo": {
                    "$ref": "#/definitions/UserInfo"
                },
                "attach": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserInfo"
                    }
                },
                "deviceInfo": {
                    "type": "object"
                },
                "platform": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "IssueNotification": {
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "orgUserId": {
                    "type": "string"
                }
            }
        },
        "SmartView": {
            "properties": {
                "where": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "0",
                        "1"
                    ],
                    "description": " privacy(0),open(1);"
                },
                "authorInfo": {
                    "type": "object"
                },
                "seq": {
                    "type": "number"
                },
                "orgUserId": {
                    "type": "string"
                }
            }
        },
        "Card": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "expMonth": {
                    "type": "integer"
                },
                "expYear": {
                    "type": "integer"
                },
                "last4": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "cvcCheck": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "funding": {
                    "type": "string"
                },
                "brand": {
                    "type": "string",
                    "description": "Visa(\"Visa\",0),American_Express(\"American Express\",1),MasterC ard(\"MasterCard\",2), Discover(\"Discover\",3), JCB(\"JCB\",4),Diners_Club(\"Diners Club\",5),Unknow(\"Unknown\",6);"
                }
            }
        },
        "BillPlan": {
            "properties": {
                "level": {
                    "type": "string",
                    "description": "Starter(0),Pro(1),Business(2),Enterprise(3)"
                },
                "baseFee": {
                    "type": "number"
                },
                "planItems": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "charingMode": {
                                "type": "string",
                                "description": "MONTHLY"
                            },
                            "priceUnit": {
                                "type": "string"
                            },
                            "freeAmount": {
                                "type": "integer"
                            },
                            "extraUsageUnit": {
                                "type": "string"
                            },
                            "price": {
                                "type": "number"
                            },
                            "extraUsage": {
                                "type": "number"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Bill": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "billDate": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "100"
                    ],
                    "description": "created(0),free(1),charged(2),fail(3),error(100)"
                },
                "totalUnit": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/BillPlan"
                },
                "billApss": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "appId": {
                                "type": "string"
                            },
                            "total": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "billItems": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "volume": {
                                            "type": "number"
                                        },
                                        "desc": {
                                            "type": "string"
                                        },
                                        "usage": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "AnaSql": {
            "properties": {
                "errorMessage": {
                    "type": "string",
                    "description": "error message"
                },
                "errorCode": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "AnaTracking": {
            "properties": {
                "errorMessage": {
                    "type": "string",
                    "description": "error message"
                },
                "errorCode": {
                    "type": "integer"
                }
            }
        },
        "AuthData": {
            "type": "object",
            "properties": {
                "authData": {
                    "type": "object",
                    "properties": {
                        "facebook": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "expiration_date": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "access_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "Facebook": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                }
            }
        },
        "Twitter": {
            "properties": {
                "consumer_key": {
                    "type": "string"
                },
                "auth_token": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "auth_token_secret": {
                    "type": "string"
                },
                "consumer_secret": {
                    "type": "string"
                },
                "screen_name": {
                    "type": "string"
                }
            }
        },
        "Anonymous": {
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "User": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "installationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Role": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "ACL": {
                    "type": "object",
                    "properties": {
                        "*": {
                            "type": "object",
                            "properties": {
                                "write": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "read": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                },
                "roles": {
                    "$ref": "#/definitions/Object"
                },
                "users": {
                    "$ref": "#/definitions/Object"
                }
            }
        },
        "Object": {
            "properties": {
                "op": {
                    "type": "string"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "_type": {
                                "type": "string"
                            },
                            "className": {
                                "type": "string"
                            },
                            "objectId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "AdCampaign": {
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                }
            }
        },
        "AdSchedule": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer",
                    "description": "当 <0 时表示 立即开始"
                },
                "endTime": {
                    "type": "integer",
                    "description": "当 <0 时表示 no end"
                },
                "priority": {
                    "type": "number",
                    "description": "[1,15]"
                },
                "limit": {
                    "type": "number",
                    "description": "当 <0 时表示 没有限制"
                },
                "platform": {
                    "type": "string",
                    "description": "ios, android",
                    "enum": [
                        "ios",
                        "android"
                    ]
                },
                "status": {
                    "type": "string",
                    "description": "enabled(1), disabled(0)"
                },
                "type": {
                    "type": "string",
                    "description": "custom(0), intertitial(1)"
                },
                "campaignId": {
                    "type": "string"
                },
                "proAppId": {
                    "type": "string"
                },
                "targeting": {
                    "type": "object",
                    "properties": {
                        "apps": {
                            "$ref": "#/definitions/Filter"
                        },
                        "locations": {
                            "$ref": "#/definitions/Filter"
                        },
                        "languages": {
                            "$ref": "#/definitions/Filter"
                        },
                        "deviceModels": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "ios -->  iphone, ipad or andorid --> phone, tablet;"
                        }
                    }
                },
                "reward": {
                    "type": "object",
                    "properties": {
                        "coins": {
                            "type": "number"
                        }
                    }
                },
                "promote": {
                    "type": "object",
                    "properties": {
                        "appId": {
                            "type": "string"
                        },
                        "urlSchema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Filter": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "in or nin(not in)"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AdCreative": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "subTitle": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "scheduleId": {
                    "type": "string"
                },
                "media": {
                    "type": "object",
                    "properties": {
                        "large": {
                            "type": "string"
                        },
                        "medium": {
                            "type": "string"
                        },
                        "small": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Fileobjectmeta": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Filemeta": {
            "properties":{
                "path": {
                    "type": "string"
                },
                "bytes": {
                    "type": "number",
                    "format": "int64"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "is_dir": {
                    "type": "boolean"
                }
            }
        },
        "Comet": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "server": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "default": "push1.maxleap.cn:xxxx"
                            }
                        }
                    }
                },
                "ret": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "NoOfflineMessage": {
            "type": "object",
            "properties": {
                "ret": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OfflineMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "msgs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "mid": {
                                        "type": "long",
                                        "format": "long",
                                        "default": 14483336195688066
                                    },
                                    "msg": {
                                        "type": "object",
                                        "properties": {
                                            "creative": {
                                                "type": "string"
                                            },
                                            "campaignId": {
                                                "type": "string"
                                            },
                                            "key1": {
                                                "type": "string"
                                            },
                                            "alert": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "gid": {
                                        "type": "integer",
                                        "format": "int32",
                                        "default": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "ret": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ServerTime": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "timeid": {
                            "type": "long",
                            "format": "long",
                            "description": ".",
                            "default": 14484219709794590
                        }
                    }
                },
                "ret": {
                    "type": "integer",
                    "format": "int32",
                    "description": "."
                }
            }
        },
        "MarketingRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "start": {
                    "type": "long",
                    "default": -1
                },
                "end": {
                    "type": "long",
                    "default": -1
                },
                "appId": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "archived": {
                    "type": "boolean",
                    "default": false
                },
                "sendMode": {
                    "type": "string"
                },
                "targetPer": {
                    "type": "integer",
                    "format": "int32",
                    "default": 100
                },
                "subscribers": {
                    "type": "integer",
                    "format": "int32",
                    "default": 3
                },
                "wasEverActive": {
                    "type": "boolean",
                    "default": true
                },
                "type": {
                    "type": "string"
                },
                "targetEvent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduling": {
                    "type": "string"
                },
                "campaignResult": {
                    "type": "object",
                    "properties": {
                        "click": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "impression": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "send": {
                            "type": "integer",
                            "format": "int32",
                            "default": 3
                        },
                        "session": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                },
                "creativeList": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "object"
                        },
                        "B": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "MarketingResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "subscribers": {
                                "type": "integer",
                                "format": "int32",
                                "default": 3
                            },
                            "criteria": {
                                "type": "string"
                            },
                            "start": {
                                "type": "long",
                                "default": -1
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "targetPer": {
                                "type": "integer",
                                "format": "int32",
                                "default": 100
                            },
                            "sends": {
                                "type": "integer",
                                "format": "int32",
                                "default": 3
                            },
                            "creativeCount": {
                                "type": "integer",
                                "format": "int32",
                                "default": 1
                            },
                            "archived": {
                                "type": "boolean",
                                "default": false
                            },
                            "createdAt": {
                                "type": "string"
                            },
                            "wasEverActive": {
                                "type": "boolean",
                                "default": true
                            },
                            "score": {
                                "type": "integer",
                                "format": "int32",
                                "default": 10000
                            },
                            "slaverName": {
                                "type": "string"
                            },
                            "creativeList": {
                                "type": "object",
                                "properties": {
                                    "A": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "data": {
                                                "type": "object",
                                                "properties": {
                                                    "alert": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "campaignResult": {
                                "type": "object",
                                "properties": {
                                    "click": {
                                        "type": "integer",
                                        "default": 0
                                    },
                                    "impression": {
                                        "type": "integer",
                                        "default": 1
                                    },
                                    "send": {
                                        "type": "integer",
                                        "default": 3
                                    },
                                    "session": {
                                        "type": "integer",
                                        "default": 0
                                    }
                                }
                            },
                            "appId": {
                                "type": "string"
                            },
                            "scheduling": {
                                "type": "string"
                            },
                            "end": {
                                "type": "long",
                                "default": -1
                            },
                            "sendMode": {
                                "type": "string"
                            },
                            "objectId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "updatedAt": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "MarketingPushMessage": {
            "type": "object",
            "properties": {
                "criteria": {
                    "type": "object",
                    "properties": {
                        "deviceToken": {
                            "type": "string"
                        }
                    }
                },
                "creativeList": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "alert": {
                                            "type": "string"
                                        },
                                        "aps": {
                                            "type": "object",
                                            "properties": {
                                                "alert": {
                                                    "type": "string"
                                                },
                                                "badge": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "sound": {
                                                    "type": "string"
                                                },
                                                "content-available": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "MarketingObjectContent": {
            "type": "object",
            "properties": {
                "subscribers": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "start": {
                    "type": "long",
                    "default": 1456934400000
                },
                "errorInfo": {
                    "type": "object"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "targetPer": {
                    "type": "integer",
                    "format": "int32",
                    "default": 100
                },
                "sends": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "creativeCount": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "archived": {
                    "type": "boolean",
                    "default": false
                },
                "wasEverActive": {
                    "type": "boolean",
                    "default": true
                },
                "createdAt": {
                    "type": "string"
                },
                "creativeList": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "alert": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "campaignResult": {
                    "type": "object",
                    "properties": {
                        "click": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "impression": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "send": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "session": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                },
                "appId": {
                    "type": "string"
                },
                "scheduling": {
                    "type": "string"
                },
                "end": {
                    "type": "long",
                    "default": 1473955200000
                },
                "sendMode": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "UpdateMarketingObjectResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "DuplicateMarketing": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string",
                    "default": "56558b67a5ff7f00019ee5c9"
                },
                "createdAt": {
                    "type": "string",
                    "default": "2015-11-24T08:12:30.919Z"
                },
                "updatedAt": {
                    "type": "string",
                    "default": "2015-11-24T08:12:30.919Z"
                },
                "errorInfo": {
                    "type": "object"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "creativeList": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "status": {
                    "type": "string"
                },
                "start": {
                    "type": "long",
                    "default": 14483536529209332
                },
                "end": {
                    "type": "long",
                    "default": 24483363239966430
                },
                "targetPer": {
                    "type": "integer",
                    "format": "int32",
                    "default": 100
                },
                "sendMode": {
                    "type": "string",
                    "default": "100"
                },
                "campaignResult": {
                    "type": "object",
                    "properties": {
                        "click": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "impression": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "send": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "session": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    }
                },
                "appId": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "scheduling": {
                    "type": "string",
                    "default": "1"
                },
                "archived": {
                    "type": "boolean",
                    "default": true
                },
                "subscribers": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "sends": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "creativeCount": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "wasEverActive": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "DuplicateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "UpdateMarketingStatus": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "1970-01-01T00:00:00.000Z"
                }
            }
        },
        "ArchivedAndUnArchived": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "1970-01-01T00:00:00.000Z"
                }
            }
        },
        "InAppRequest": {
            "type": "object",
            "properties": {
                "installId": {
                    "type": "string"
                }
            }
        },
        "InAppList": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "objectId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "creativeList": {
                        "type": "object",
                        "properties": {
                            "A": {
                                "type": "object",
                                "properties": {
                                    "remark": {
                                        "type": "object",
                                        "properties": {
                                            "header_text_color": {
                                                "type": "string"
                                            },
                                            "line2_font_size": {
                                                "type": "string"
                                            },
                                            "line2_text_color": {
                                                "type": "string"
                                            },
                                            "action_link": {
                                                "type": "string"
                                            },
                                            "header_font_size": {
                                                "type": "string"
                                            },
                                            "line1_font_name": {
                                                "type": "string"
                                            },
                                            "line1_text_color": {
                                                "type": "string"
                                            },
                                            "use_action": {
                                                "type": "string"
                                            },
                                            "background_color": {
                                                "type": "string"
                                            },
                                            "action_background_color": {
                                                "type": "string"
                                            },
                                            "line2_text": {
                                                "type": "string"
                                            },
                                            "background_image": {
                                                "type": "string"
                                            },
                                            "action_font_name": {
                                                "type": "string"
                                            },
                                            "background_round_corner": {
                                                "type": "string"
                                            },
                                            "action_text": {
                                                "type": "string"
                                            },
                                            "line2_font_name": {
                                                "type": "string"
                                            },
                                            "content_image": {
                                                "type": "string"
                                            },
                                            "line1_text": {
                                                "type": "string"
                                            },
                                            "header_font_name": {
                                                "type": "string"
                                            },
                                            "header_text": {
                                                "type": "string"
                                            },
                                            "line1_font_size": {
                                                "type": "string"
                                            },
                                            "action_text_color": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "layout": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "object",
                                        "properties": {
                                            "phone": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "tablet": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "position": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "object",
                                        "properties": {
                                            "phone": {
                                                "type": "object",
                                                "properties": {
                                                    "width": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "default": 300
                                                    },
                                                    "height": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "default": 250
                                                    }
                                                }
                                            },
                                            "tablet": {
                                                "type": "object",
                                                "properties": {
                                                    "width": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "default": 600
                                                    },
                                                    "height": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "default": 500
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    "end": {
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    "targetPer": {
                        "type": "integer",
                        "format": "int32",
                        "default": 100
                    },
                    "sendMode": {
                        "type": "string"
                    },
                    "campaignResult": {
                        "type": "object",
                        "properties": {
                            "click": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0
                            },
                            "impression": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0
                            },
                            "send": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0
                            },
                            "session": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0
                            }
                        }
                    },
                    "appId": {
                        "type": "string"
                    },
                    "scheduling": {
                        "type": "string"
                    },
                    "archived": {
                        "type": "boolean",
                        "default": false
                    },
                    "subscribers": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    "sends": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    "creativeCount": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    "targetEvent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CountMarketing": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                }
            }
        },
        "CountInstallations": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                }
            }
        },
        "MarketingStat": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "the unique number differentiate every pull actions."
                },
                "campaignId": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string",
                    "description": "the osVersion of android or IOS."
                },
                "appVersion": {
                    "type": "string",
                    "description": "the Version of this app."
                },
                "title": {
                    "type": "string",
                    "description": "whatever."
                },
                "appUserId": {
                    "type": "string",
                    "description": "installationId."
                },
                "creative": {
                    "type": "string",
                    "description": "SDK just send A."
                },
                "campaignType": {
                    "type": "string",
                    "description": "InApp(0) and Push(1)."
                },
                "eventType": {
                    "type": "string",
                    "description": "Click(0),Session(1),Impression(2),Send(3),UnDefined(100)"
                }
            }
        },
        "EventResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "1970-01-01T00:00:00.000Z"
                }
            }
        },
        "ConfigKey": {
            "type": "object",
            "properties": {
                "appleConfig": {
                    "type": "object",
                    "properties": {
                        "key": {
                            "type": "string"
                        }
                    }
                },
                "gcmConfig": {
                    "type": "object",
                    "properties": {
                        "apiKey": {
                            "type": "string"
                        },
                        "senderId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SendConfigResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "1970-01-01T00:00:00.000Z"
                }
            }
        },
        "SubscriptionRequest": {
            "type": "object",
            "properties": {
                "mail": {
                    "type": "string"
                },
                "appIds": {
                    "type": "array",
                    "description": "the objectId of Apps.",
                    "items": {
                        "type": "string"
                    }
                },
                "modules": {
                    "type": "array",
                    "description": "the content of subscription.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "taskType": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "period": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "moduleName": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "SubscriptionResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "appIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mail": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "taskType": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "period": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "moduleName": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            }
                        }
                    }
                },
                "orgId": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "UpdateSubscriptionResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DeleteSubscriptionResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                }
            }
        },
        "QuerySubscriptionResult": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/SubscriptionResponse"
            }
        },
        "ModulesResponse": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ModuleResponse"
            }
        },
        "ModuleRequest": {
            "type": "object",
            "properties": {
                "taskType": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "moduleName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AddModuleResult": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ModuleResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "taskType": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "moduleName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UpdateModuleResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DeleteModuleResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                }
            }
        },
        "QueryModuleResult": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ModuleResponse"
            }
        },
        "MobilePhoneNumber": {
            "type": "object",
            "properties": {
                "mobilePhone": {
                    "type": "string"
                }
            }
        },
        "SmsCodeResult": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "MobilePhoneNumberAndCaptcha": {
            "type": "object",
            "properties": {
                "mobilePhone": {
                    "type": "string"
                },
                "smsCode": {
                    "type": "string"
                }
            }
        },
        "SmsCodeError": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string",
                    "default": "Task status error!"
                },
                "errorCode": {
                    "type": "integer",
                    "format": "int32",
                    "default": 221
                }
            }
        },
        "LoginMobilePhoneInformation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-14T04:29:46.375Z"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "sessionToken": {
                    "type": "string"
                },
                "isNew": {
                    "type": "boolean",
                    "default": true
                },
                "mobilePhoneVerified": {
                    "type": "boolean",
                    "default": true
                },
                "enabled": {
                    "type": "boolean",
                    "default": true
                },
                "objectId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "PutVerifyResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-14T07:05:57.841Z"
                }
            }
        },
        "MobilePhoneNumberAndCaptchaAndPassword": {
            "type": "object",
            "properties": {
                "mobilePhone": {
                    "type": "string"
                },
                "smsCode": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "OrgUsersLoginByMobilePhone": {
            "type": "object",
            "properties": {
                "sessionToken": {
                    "type": "string"
                },
                "orgId": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "userType": {
                    "type": "integer",
                    "format": "int32",
                    "default": 2
                }
            }
        },
        "OrgsInformationsList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "qq": {
                                "type": "string"
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "default": "2014-07-15T09:30:17.971Z"
                            },
                            "orgType": {
                                "type": "string",
                                "default": "App"
                            },
                            "website": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "contract": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "enabled": {
                                "type": "boolean"
                            },
                            "objectId": {
                                "type": "string"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "default": "2014-07-15T09:30:17.971Z"
                            }
                        }
                    }
                }
            }
        },
        "OrgsInformationsDetails": {
            "type": "object",
            "properties": {
                "qq": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "creator": {
                    "type": "object",
                    "properties": {
                        "timezone": {
                            "type": "string",
                            "default": "Asia/Shanghai"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "orgDisabled": {
                            "type": "boolean"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "orgId": {
                            "type": "string"
                        },
                        "emailVerified": {
                            "type": "boolean"
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "default": "2015-11-10T08:55:39.704Z"
                        },
                        "password": {
                            "type": "string"
                        },
                        "userType": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "email": {
                            "type": "string"
                        },
                        "objectId": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "default": "2015-11-10T08:55:39.704Z"
                        }
                    }
                },
                "address": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "orgType": {
                    "type": "string",
                    "default": "App"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-11-10T08:55:39.704Z"
                },
                "phone": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "billingAddress": {
                    "type": "string"
                },
                "invoiceTitle": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-11-10T08:55:39.704Z"
                }
            }
        },
        "OrgsAccounts": {
            "type": "object",
            "properties": {
                "orgIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OrgsUsers": {
            "type": "object",
            "properties": {
                "orgUserIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OrgsResult": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "dafault": "2015-12-28T09:20:56.963Z"
                }
            }
        },
        "OrgsUsingProfiles": {
            "type": "object",
            "properties": {
                "stats": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "name": {
                                "type": "string",
                                "default": "api",
                                "enum": [
                                    "api",
                                    "session"
                                ]
                            }
                        }
                    }
                },
                "dates": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32",
                        "default": 20151201
                    }
                }
            }
        },
        "OrgsUsersList": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "default": "Asia/Shanghai"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "OrgAdmin",
                            "enum": [
                                "OrgAdmin",
                                "ProductManager",
                                "Support",
                                "Marketing",
                                "Developer"
                            ]
                        }
                    },
                    "orgDisabled": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "orgId": {
                        "type": "string"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-11-10T08:55:39.704Z"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "userType": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    "email": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-12-28T09:20:56.945Z"
                    }
                }
            }
        },
        "OrgsAppsList": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "desc": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            },
                            "production": {
                                "type": "boolean"
                            }
                        }
                    },
                    "urlSchema": {
                        "type": "string",
                        "default": null
                    },
                    "urlSchemas": {
                        "type": "object",
                        "properties": {
                            "android": {
                                "type": "string"
                            }
                        }
                    },
                    "masterKey": {
                        "type": "string"
                    },
                    "javascriptKey": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "appStoreId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string"
                    },
                    "platforms": {
                        "type": "object",
                        "properties": {
                            "Google Play Store": {
                                "type": "string"
                            }
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-11-10T08:58:22.181Z"
                    },
                    "clientKey": {
                        "type": "string"
                    },
                    "appType": {
                        "type": "string"
                    },
                    "iap": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-12-28T09:20:56.951Z"
                    },
                    "faqConfig": {
                        "type": "string"
                    },
                    "rateLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "os": {
                        "type": "string"
                    },
                    "orgDisabled": {
                        "type": "boolean"
                    },
                    "isNew": {
                        "type": "object",
                        "properties": {
                            "anaData": {
                                "type": "boolean"
                            }
                        }
                    },
                    "enableCreateObject": {
                        "type": "boolean"
                    },
                    "userRating": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enablePassport": {
                        "type": "boolean"
                    },
                    "orgUserIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "appStoreIds": {
                        "type": "object",
                        "properties": {
                            "packageName": {
                                "type": "string"
                            }
                        }
                    },
                    "enableOfflineAna": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netKey": {
                        "type": "string"
                    },
                    "cloudCodeMapping": {
                        "type": "boolean"
                    },
                    "restAPIKey": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "defaultLang": {
                        "type": "string",
                        "default": "en",
                        "enum": [
                            "en",
                            "zh"
                        ]
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    }
                }
            }
        },
        "MsgsContent": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                },
                "content": {
                    "type": "string"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "all"
                    }
                }
            }
        },
        "MsgsResponse": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "the objectId of message"
                }
            }
        },
        "MsgsListResponse": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "title": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "creator": {
                    "type": "string"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delete": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "MsgsDetails": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "desc": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delete": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "MsgsUpdateDetails": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "MsgsEditResponse": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1
                }
            }
        },
        "MsgsIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AppMsgsCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppMsgsList": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string"
                    },
                    "orgUserId": {
                        "type": "string"
                    },
                    "msgId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-12-18T08:32:11.465Z"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2015-12-18T08:32:11.465Z"
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "default": 0
                    },
                    "desc": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1
                        ],
                        "default": 0
                    }
                }
            }
        },
        "AppMsgsDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "orgId": {
                    "type": "string"
                },
                "orgUserId": {
                    "type": "string"
                },
                "msgId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "2015-12-18T08:32:11.465Z"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "default": 0
                },
                "content": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "default": 0
                }
            }
        },
        "AppMsgsStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "default": 0
                }
            }
        },
        "AppMsgsStatusBatchRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "default": 0
                }
            }
        },
        "AppMsgsIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "MaxPayBillRequestContent": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string",
                    "description": "the name of payment platform.",
                    "default": "ali",
                    "enum": [
                        "ali",
                        "ali_app",
                        "ali_web",
                        "ali_qrcode",
                        "wx",
                        "wx_app",
                        "wx_jsapi",
                        "paypal",
                        "app store",
                        "google play",
                        "amazon",
                        "unipay",
                        "unipay_app",
                        "unipay_web"
                    ]
                },
                "billNum": {
                    "type": "string",
                    "description": "An unique ID number of payment on one SDK platform."
                },
                "totalFee": {
                    "type": "integer",
                    "format": "int32"
                },
                "subject": {
                    "type": "string"
                },
                "extras": {
                    "type": "object",
                    "properties": {
                        "key1": {
                            "type": "string",
                            "default": "value1"
                        },
                        "key2": {
                            "type": "string",
                            "default": "value2"
                        }
                    }
                },
                "returnUrl": {
                    "type": "string"
                },
                "billTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "default": 360,
                    "minimum": 360
                },
                "showUrl": {
                    "type": "string"
                },
                "qrPayMode": {
                    "type": "string"
                }
            }
        },
        "MaxPayBillResponseContent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "An unique ID number of payment."
                },
                "ali_app": {
                    "type": "string"
                },
                "ali_web": {
                    "type": "string"
                },
                "msg": {
                    "type": "string",
                    "default": "OK"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                }
            }
        },
        "MaxPayRecordsRequestContent": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string",
                    "default": "ali",
                    "required": false
                },
                "billNum": {
                    "type": "string",
                    "required": false
                },
                "status": {
                    "type": "string",
                    "default": "created",
                    "enum": [
                        "created",
                        "success",
                        "refund"
                    ],
                    "required": true
                },
                "startTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "endTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "skip": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "default": 20,
                    "enum": [
                        20,
                        50,
                        100
                    ]
                },
                "order": {
                    "type": "string",
                    "default": "-createdAt",
                    "required": true,
                    "description": "the name of ordered list"
                }
            }
        },
        "MaxPayRecordsResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1
                    ]
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "billNum": {
                                "type": "string"
                            },
                            "channel": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "created",
                                    "success",
                                    "refund"
                                ]
                            },
                            "createdTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "endTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "totalFee": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "extras": {
                                "type": "object",
                                "properties": {
                                    "key1": {
                                        "type": "string",
                                        "default": "value1"
                                    },
                                    "key2": {
                                        "type": "string",
                                        "default": "value2"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "MaxPayChannelRequestContent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "ali"
                },
                "partner": {
                    "type": "string"
                },
                "seller": {
                    "type": "string",
                    "description": "an unique ID number of seller"
                },
                "secureKey": {
                    "type": "string"
                },
                "rsaKey": {
                    "type": "string"
                }
            }
        },
        "MaxPayChannelResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        3
                    ]
                },
                "err": {
                    "type": "string",
                    "description": "errorMessage"
                }
            }
        },
        "MaxPayChannelGetResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        3
                    ]
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "default": "ali"
                            },
                            "partner": {
                                "type": "string"
                            },
                            "createdTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "updatedTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "seller": {
                                "type": "string"
                            },
                            "secureKey": {
                                "type": "string"
                            },
                            "rsaKey": {
                                "type": "string"
                            }
                        }
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "MaxPayWebhookRequestContent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "required": false,
                    "description": "an unique ID number of webhook"
                },
                "pay": {
                    "type": "boolean",
                    "default": true,
                    "description": "the condition whether notice the pay event."
                },
                "refund": {
                    "type": "boolean",
                    "default": true,
                    "description": "the condition whether notice the refund event."
                },
                "mode": {
                    "type": "string",
                    "default": "test",
                    "enum": [
                        "test",
                        "live"
                    ],
                    "description": "the work mode of this webhook."
                },
                "url": {
                    "type": "string",
                    "description": "the url address of wehhook server."
                }
            }
        },
        "MaxPayWebhookResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        5
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "an unique ID number of webhook."
                },
                "err": {
                    "type": "string",
                    "description": "errorMessage."
                }
            }
        },
        "MaxPayWebhookGetResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "an unique ID number of webhook."
                            },
                            "pay": {
                                "type": "boolean",
                                "description": "the condition whether notice the pay event."
                            },
                            "refund": {
                                "type": "boolean",
                                "description": "the condition whether notice the refund event."
                            },
                            "url": {
                                "type": "string",
                                "description": "the url address of wehhook server."
                            },
                            "createdTime": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "updatedTime": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "err": {
                    "type": "string",
                    "description": "errorMessage"
                }
            }
        },
        "MaxPayWebhookDeleteResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "err": {
                    "type": "string",
                    "description": "errorMessage"
                }
            }
        },
        "MaxPayWebhookTestRequestContent": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string",
                    "default": "pay",
                    "enum": [
                        "pay",
                        "defund"
                    ],
                    "description": "the type of testing."
                },
                "id": {
                    "type": "string",
                    "description": "the unique ID number of webhook."
                }
            }
        },
        "MaxPayWebhookTestResponseContent": {
            "type": "object",
            "properties": {
                "httpStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the http response code.",
                    "default": 200
                },
                "request": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "err": {
                    "type": "string",
                    "description": "errorMessage"
                }
            }
        }
    }
}